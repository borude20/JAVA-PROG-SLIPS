// Volt class to measure volts
class Volt {
    private int volts;

    public Volt(int volts) {
        this.volts = volts;
    }

    public int getVolts() {
        return volts;
    }
}

// Socket class producing constant volts of 120V
class Socket {
    public Volt getVolts() {
        return new Volt(120);
    }
}

// Adapter interface
interface MobileChargerAdapter {
    Volt get3Volts();

    Volt get12Volts();

    Volt getDefaultVolts();
}

// Class Adapter implementing the Adapter interface
class MobileChargerClassAdapter extends Socket implements MobileChargerAdapter {
    @Override
    public Volt get3Volts() {
        Volt volts = getVolts();
        return convertVolts(volts, 3);
    }

    @Override
    public Volt get12Volts() {
        Volt volts = getVolts();
        return convertVolts(volts, 12);
    }

    @Override
    public Volt getDefaultVolts() {
        return getVolts();
    }

    private Volt convertVolts(Volt volts, int targetVolts) {
        int factor = volts.getVolts() / targetVolts;
        return new Volt(targetVolts);
    }
}

// Client code to test the Adapter pattern
public class AdapterPatternExample {
    public static void main(String[] args) {
        MobileChargerAdapter chargerAdapter = new MobileChargerClassAdapter();

        Volt volts3 = chargerAdapter.get3Volts();
        System.out.println("Charging with " + volts3.getVolts() + " volts");

        Volt volts12 = chargerAdapter.get12Volts();
        System.out.println("Charging with " + volts12.getVolts() + " volts");

        Volt defaultVolts = chargerAdapter.getDefaultVolts();
        System.out.println("Charging with " + defaultVolts.getVolts() + " volts");
    }
}